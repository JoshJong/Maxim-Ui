var path = require('path');
var Client = require('ftp');
var common = require('./common.js');

function ftpUtil(){}
ftpUtil.prototype = {
    ftp : function(files,Config,callback){
        var self=this;
        //连接
        var c = new Client();
        c.connect({
            host: Config.ftpHost,
            user: Config.ftpUser ,
            password: Config.ftpPassword,
            port: Config.ftpPort
        });

        //连接失败
        var errorlength=0;
        c.on('error',function(e){
            errorlength+=1;
            var err= {success:false,files:[{fName:'none'},{status:false},{message:e.message}]};
            if(errorlength==1){
                callback(err);
            }
        });
        //连接成功
        c.on('ready',function(){
            self.filesCheck(this,files,Config,callback)
        });
    },
    filesCheck : function (c,files,Config,callback){
        //处理传入文件为空的情况
        var _files = files || [''];
        if(_files.length < 1){
            var err= {success:false,files:[{fName:'none'},{status:false},{message:'您没有要上传的文件！'}]};
            callback(err);
            c.end();
            return;
        }
        //声明路径列表
        var filePath=[];
        //定义回调数组
        var cbData = [];
        //获取文件路径列 表
        for(var j in _files){
            filePath.push(path.dirname(_files[j]));
        }
        //处理路径模块
        var plat = common.getCurrentPlat();
        var split = plat.split;
        //处理config中路径的配置如果不以\结尾，则要加上
        Config.destPath = Config.destPath[Config.destPath.length-1] === split ? Config.destPath : Config.destPath + split;
        //处理远端目录是否有/
        if(Config.ftpRemotePath[Config.ftpRemotePath.length - 1] != '/'){
            Config.ftpRemotePath = Config.ftpRemotePath + '/'
        }
        console.log(Config.ftpRemotePath);
        //将不同目录的文件分组
        var newFileArr = [];
        var n = 0;
        for (var i = 0; i < filePath.length; i++) {
            if (filePath[i] != filePath[i + 1]) {
                newFileArr.push(_files.slice(n, i + 1))
                n = i + 1;
            }
        }
        //上传不同目录的文件，完成后回调
        for(var k=0; k<newFileArr.length;k++){
            this.upload(c,newFileArr[k],Config,function(e){
                    cbData = cbData.concat(e);
                    if(cbData.length == _files.length){
                        callback({success:true,files:cbData});
                    }
            });
        }
    },
    upload: function(c,_files,Config,cb){
        var ftpFiles = [];
        //去除根目录
        var filePath = _files[0].replace(Config.destPath,'');
        //取出一个文件名
        var fileName = path.basename(filePath);
        //获取文件目录
        var mkPaths;

        //如果直接传根目录下的文件，打flag，否则分析目录结构
        if(filePath == fileName){
            filePaths = 0;
        }else{
            mkPaths = path.dirname(filePath);
            //获取目录数组
            var filePaths = mkPaths.split('\\');
            //获取目录层级数
            var dirCount = filePaths.length;
        }

        //获取文件数
        var count = _files.length;
        var output = [];
        //保存远程目录
        var tmpPath = Config.ftpRemotePath;
        //整理文件名
        for (var i in _files){
            ftpFiles.push( path.basename(_files[i]));
        }
        //判断是否需要创建目录
        if(filePaths){
            for(var j = 0;j<filePaths.length;j++){
                creatDir(j,c)();
            }
        }else{
            creatDir(0,c)();
        }
        //创建目录
        function creatDir(k,c){
            return function () {
                //有目录要创建则创建，否则直接上传
                if(filePaths){
                    tmpPath += filePaths[k] + '/';
                    c.mkdir( tmpPath,true,function(err){
                        dirCount--;
                        if(dirCount<= 0){
                            putItem(tmpPath);
                        }
                    });
                }else{
                    putItem(tmpPath);
                }

            }
        }
        //循环文件执行上传
        function putItem(ftpRemotePath){
            for(var j = 0;j<ftpFiles.length;j++){
                getFtpItem(j,ftpRemotePath)();
            }
        }
        //上传单个文件
        function getFtpItem(k,ftpRemotePath){
            return function () {
                c.put(_files[k],ftpRemotePath + ftpFiles[k],function(err){
                    if(err){
                        output[k] = {};
                        output[k].fName = _files[k].replace(Config.destPath,'').replace(/\\/g,'\/');
                        output[k].status = false;
                        output[k].message = err.message;
                        console.log(err.message)
                    }else{
                        output[k] = {};
                        output[k].fName = _files[k].replace(Config.destPath,'').replace(/\\/g,'\/');
                        output[k].status = true;
                        output[k].message = 'success';
                    }

                    //判断是否上传所有文件
                    count--;
                    if(count <= 0){
                        cb(output);
                        c.end();
                        tmpPath = Config.ftpRemotePath;
                    }
                });
            }
        }
    }
};
module.exports = ftpUtil;