function Copyfile(){}
Copyfile.prototype = {
    copy : function(files,config,callback){
        //预处理，如果传入的是单个文件名将其转换成文件字符串
        if(typeof files === 'string'){
            var tmp = files;
            files = [];
            files.push(tmp);
        }
        //变量定义
        var util = require('./common.js');
        var plat = util.getCurrentPlat();
        var split = plat.split;

        var fs = require('fs');
        var path = require('path');
        var results = [];
        var count = files.length;
        var index = count;
        //处理config中路径的配置如果不以\结尾，则要加上
        config.localPath = config.localPath[config.localPath.length-1] === split ? config.localPath : config.localPath +split;
        config.destPath = config.destPath[config.destPath.length-1] === split ? config.destPath : config.destPath + split;
        //创建目标路径
        var realDest = config.destPath + files[0].replace(config.localPath,'').replace(path.basename(files[0]),'');
        util.createPath(realDest,fs);

        //循环拷贝文件
        for(var i = 0;i<count;i++){
            copyfile(fs,i)();
        }
        function copyfile(fs,k){
            return function () {
                var rname = files[k].replace(config.localPath,config.destPath);
                try{
                    if(!fs.existsSync(files[k])){
                        results.push({
                            fName : files[k].replace(config.localPath,'').replace(/\\/g,'\/'),
                            status : false,
                            message : 'file is not existed'
                        });
                    }else{
                        fs.createReadStream(files[k]).pipe(fs.createWriteStream(rname));
                        results.push({
                            fName : files[k].replace(config.localPath,'').replace(/\\/g,'\/'),
                            status : true
                        });
                    }
                }catch(e){
                    results.push({
                        fName : files[k].replace(config.localPath,'').replace(/\\/g,'\/'),
                        status : false,
                        message : e.message
                    });
                }finally{
                    index--;
                    if(index <= 0){
                        callback(results);
                    }
                }
            }
        }
    }
};
module.exports = Copyfile;